name: Release and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: 'patch'

permissions:
  contents: read
  id-token: write  # Required for provenance
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        scope: '@ojutalayomi'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Check if version exists
      id: check-version
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Checking if version $VERSION exists on npm..."
        if npm view react-textarea-enhanced@$VERSION version 2>/dev/null; then
          echo "Version $VERSION already exists on npm"
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "Version $VERSION does not exist on npm"
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Update version in package.json
      if: steps.check-version.outputs.exists == 'false'
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        npm version $VERSION --no-git-tag-version
        echo "Updated package.json to version $VERSION"
        
    - name: Publish to npm
      if: steps.check-version.outputs.exists == 'false'
      run: npm publish --provenance --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      if: steps.check-version.outputs.exists == 'false' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's New
          - Enhanced textarea component with Twitter-like features
          - Character limit with visual feedback
          - Entity highlighting (hashtags, mentions, URLs, cashtags)
          - Auto-expanding textarea
          - Dark mode support
          - TypeScript support
          
          ## Installation
          ```bash
          npm install react-textarea-enhanced
          ```
          
          ## Usage
          ```tsx
          import { TextAreaBox } from 'react-textarea-enhanced';
          import 'react-textarea-enhanced/dist/ComposeBox.css';
          
          function App() {
            return <TextAreaBox charLimit={280} />;
          }
          ```
        draft: false
        prerelease: false
